version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: youtube_postgres
    environment:
      POSTGRES_DB: youtube_videos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # YouTube Video Fetcher API
  youtube-api:
    build: .
    container_name: youtube_api
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/youtube_videos
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}
      YOUTUBE_API_KEY_2: ${YOUTUBE_API_KEY_2:-}
      YOUTUBE_API_KEY_3: ${YOUTUBE_API_KEY_3:-}
      SESSION_SECRET: ${SESSION_SECRET:-your-secret-key-change-in-production}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/stats"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (optional - for future caching improvements)
  redis:
    image: redis:7-alpine
    container_name: youtube_redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: youtube_network